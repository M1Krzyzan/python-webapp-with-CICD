name: CI Pipeline

on: [push, pull_request]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create .env file for tests
        run: |
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> .env
          echo "MONGO_USER=${{ secrets.MONGO_USER }}" >> .env
          echo "MONGO_DATABASE=${{ secrets.MONGO_DATABASE_DEV }}" >> .env
          echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "REACT_APP_URL=${{ secrets.REACT_APP_URL }}" >> .env
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> .env

      - name: Setup poetry
        run: pip install --no-cache-dir "poetry==1.8.4"

      - name: Install dependencies
        run: poetry install

      - name: Run backend tests
        run: poetry run pytest

      - name: Find site-packages path
        id: site_packages
        run: echo "SITE_PACKAGES=$(python -c 'import site; print(site.getsitepackages()[0])')" >> $GITHUB_ENV

      - name: Package backend for deployment
        run: |
          mkdir -p artifact
          poetry install --without dev
          cp -r $SITE_PACKAGES/* artifact/
          cp -r application artifact/
          cp -r domain artifact/
          cp -r infrastructure artifact/
          cp -r paim-app-function artifact/
          cp host.json artifact/
          rm -rf artifact/tests

      - name: Create a zip file for the backend artifact
        run: |
          cd ./artifact
          zip -r ../backend.zip .

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend
          path: backend/backend.zip
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        run: npm ci

      - name: Run frontend tests
        run: npm test

      - name: Build frontend
        run: npm run build

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
            name: frontend
            path: frontend/dist



