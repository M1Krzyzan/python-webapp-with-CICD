name: CI Pipeline

on: push

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create env variables for tests
        run: |
          export MONGO_PASSWORD="${{ secrets.MONGO_PASSWORD }}"
          export MONGO_USER="${{ secrets.MONGO_USER }}"
          export MONGO_DATABASE="${{ secrets.MONGO_DATABASE_DEV }}"
          export MONGO_URL="${{ secrets.MONGO_URL }}"
          export SECRET_KEY="${{ secrets.SECRET_KEY }}"
          export REACT_APP_URL="${{ secrets.REACT_APP_URL }}"
          export STRIPE_SECRET_KEY="${{ secrets.STRIPE_SECRET_KEY }}"

      - name: Setup poetry
        run: pip install --no-cache-dir "poetry==1.8.4"

      - name: Cache Poetry Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-root

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/backend" >> $GITHUB_ENV

      - name: Run backend tests
        run: poetry run pytest

      - name: End job if it's not main branch
        if: github.ref == 'refs/heads/main'
        run: exit 0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/paim-webapp-backend:${{ github.sha }}

      - name: Write image tag to file
        run: |
          echo "${{ secrets.DOCKERHUB_USERNAME }}/paim-webapp-backend:${{ github.sha }}" >> image_name.txt

      - name: Upload Artifact with backend image name
        uses: actions/upload-artifact@v4
        with:
          name: backend
          path: image_name.txt

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: npm ci

      - name: Run frontend tests
        run: npm test

      - name: End job if it's not main branch
        if: github.ref == 'refs/heads/main'
        run: exit 0

      - name: Build frontend
        run: npm run build

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
            name: frontend
            path: dist