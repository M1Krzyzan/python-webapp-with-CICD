name: Deploy to Azure

on:
  workflow_run:
    workflows: ['CI Pipeline']
    types:
      - completed

jobs:
  deploy-infra:
    if: github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main'
    outputs:
      backend_url: ${{ steps.tf_output.outputs.backend_url }}
      frontend_url: ${{ steps.tf_output.outputs.frontend_url }}
      frontend_storage: ${{ steps.tf_output.outputs.frontend_storage }}
    defaults:
      run:
        working-directory: infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get docker image name
        run:
          ls
          ls ../
          echo "BACKEND_IMAGE=$(head ../image_name.txt -n 1)"
          echo "BACKEND_IMAGE=$(head ../image_name.txt -n 1)" >> $GITHUB_ENV


      - name: Set Azure environment variables
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -lock=false \
            -var="mongo_password=${{ secrets.MONGO_PASSWORD }}" \
            -var="mongo_user=${{ secrets.MONGO_USER }}" \
            -var="mongo_database=${{ secrets.MONGO_DATABASE }}" \
            -var="mongo_url=${{ secrets.MONGO_URL }}" \
            -var="secret_key=${{ secrets.SECRET_KEY }}" \
            -var="stripe_secret_key=${{ secrets.STRIPE_SECRET_KEY }}" \
            -var="react_app_url=${{ secrets.REACT_APP_URL }}"
            -var="backend_image=$BACKEND_IMAGE"

      - name: Save Terraform output
        id: tf_output
        run: |
          echo "backend_url=$(terraform output -raw backend_url)" >> $GITHUB_OUTPUT
          echo "frontend_url=$(terraform output -raw frontend_url)" >> $GITHUB_OUTPUT
          echo "frontend_storage=$(terraform output -raw frontend_storage_name)" >> $GITHUB_OUTPUT

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-infra
    env:
      STORAGE_ACCOUNT_NAME: ${{ needs.deploy-infra.outputs.frontend_storage }}
      BACKEND_URL: ${{ needs.deploy-infra.outputs.backend_url }}
    steps:
      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload Files to Static Website
        run: |
          az storage blob upload-batch \
          --account-name $STORAGE_ACCOUNT_NAME \
          --destination '$web' \
          --source . \
          --overwrite

  update-backend-config:
    runs-on: ubuntu-latest
    needs: deploy-infra
    env:
      FRONTEND_URL: ${{ needs.deploy-infra.outputs.frontend_url }}
    steps:
      - name: Update Backend Environment Variables
        run: |
          az containerapp update \
            --name paim-app \
            --resource-group paim-app-rg \
            --set-env-vars REACT_APP_URL=$FRONTEND_URL