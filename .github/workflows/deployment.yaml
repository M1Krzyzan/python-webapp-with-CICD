name: Deploy to Azure

on:
  workflow_run:
    workflows: ['CI Pipeline']
    types:
      - completed

jobs:
  deploy-infra:
    if: github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main'
    outputs:
      resource_group: ${{  steps.tf_output.resource_group }}
      function_app: ${{  steps.tf_output.function_app }}
      frontend_storage: ${{  steps.tf_output.frontend_storage }}
    defaults:
      run:
        working-directory: infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Terraform Output
        id: tf_output
        run: |
          echo "resource_group=$(terraform output -raw resource_group_name)" >> $GITHUB_OUTPUT
          echo "function_app=$(terraform output -raw function_app_name)" >> $GITHUB_OUTPUT
          echo "frontend_storage=$(terraform output -raw frontend_storage_name)" >> $GITHUB_OUTPUT

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-infra
    env:
      STORAGE_ACCOUNT_NAME: ${{  needs.deploy-infra.outputs.frontend_storage }}
    steps:
      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug Outputs
        run: |
          echo "Resource Group: ${{ needs.deploy-infra.outputs.resource_group }}"
          echo "Function App: ${{ needs.deploy-infra.outputs.function_app }}"
          echo "Frontend Storage: ${{ needs.deploy-infra.outputs.frontend_storage }}"

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload Files to Static Website
        run: az storage blob upload-batch --account-name $STORAGE_ACCOUNT_NAME --destination '$web' --source dist --overwrite

  deploy-backend:
    runs-on: ubuntu-latest
    needs: deploy-infra
    env:
      RESOURCE_GROUP_NAME: ${{  needs.deploy-infra.outputs.resource_group }}
      FUNCTION_APP_NAME: ${{  needs.deploy-infra.outputs.function_app }}
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug Outputs
        run: |
          echo "Resource Group: ${{ needs.deploy-infra.outputs.resource_group }}"
          echo "Function App: ${{ needs.deploy-infra.outputs.function_app }}"
          echo "Frontend Storage: ${{ needs.deploy-infra.outputs.frontend_storage }}"

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Functions
        run: az functionapp deployment source config-zip --resource-group $RESOURCE_GROUP_NAME --name $FUNCTION_APP_NAME --src backend.zip
