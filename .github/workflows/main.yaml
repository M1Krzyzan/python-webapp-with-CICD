name: CI Pipeline

on: [push, pull_request]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create .env file for tests
        run: |
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> .env
          echo "MONGO_USER=${{ secrets.MONGO_USER }}" >> .env
          echo "MONGO_DATABASE=${{ secrets.MONGO_DATABASE_DEV }}" >> .env
          echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "REACT_APP_URL=${{ secrets.REACT_APP_URL }}" >> .env
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> .env

      - name: Setup poetry
        run: pip install --no-cache-dir "poetry==1.8.4"

      - name: Install dependencies
        run: poetry install

      - name: Run backend tests
        run: pytest
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        run: npm ci

      - name: Run frontend tests
        run: npm test

  push_docker_images:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    outputs:
      timestamp: ${{ steps.generate_timestamp.outputs.timestamp }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate timestamp
        id: generate_timestamp
        run: |
          TIMESTAMP=$(date +'%Y-%m-%d:%H-%M-%S')
          echo "::set-output name=timestamp::$TIMESTAMP"

      - name: Create .env file for tests
        run: |
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> .env
          echo "MONGO_USER=${{ secrets.MONGO_USER }}" >> .env
          echo "MONGO_DATABASE=${{ secrets.MONGO_DATABASE }}" >> .env
          echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "REACT_APP_URL=${{ secrets.REACT_APP_URL }}" >> .env
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> .env

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{  secrets.DOCKERHUB_USERNAME }}
          password: ${{  secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/paim-webapp-backend:${{ needs.push_docker_images.outputs.timestamp }}

      - name: Build Docker image for frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/paim-webapp-frontend:${{ needs.push_docker_images.outputs.timestamp }}



